
// Buttons
#define  S0   ( (GPIO1_IOPIN & (1<< 8))  == 0 )
#define  S1   ( (GPIO1_IOPIN & (1<< 9))  == 0 )
#define  S2   ( (GPIO1_IOPIN & (1<<10))  == 0 )
#define  S3   ( (GPIO1_IOPIN & (1<<11))  == 0 )
#define  S4   ( (GPIO1_IOPIN & (1<<12))  == 0 )
#define  S5   ( (GPIO1_IOPIN & (1<<13))  == 0 )
#define  S6   ( (GPIO1_IOPIN & (1<<14))  == 0 )
#define  S7   ( (GPIO1_IOPIN & (1<<15))  == 0 )

//Frequenzy
#define BASEFREQUENZ 44117
#define LOWFREQUENZ 440
#define HIGHFREQUENZ 5000
#define F_LOW 0
#define F_HIGH 1
//Shapes
#define SINSHAPE 1
#define TRISHAPE 0
//Amp
#define LOWAMP  ((0.5/3.3*1024)*(2<<5))//155  //((0.5/3.3*1024)<<6)
#define HIGHAMP ((1/3.3*1024)*(2<<5))   //310  // ((1/3.3*1024)<<6)
#define OFFSET  ((1.5/3.3*1024)*(2<<5))    //465  // ((1.5/3.3*1024)<<6)
//SigTable
#define SIGTABLESIZE 321
#define INDEX (SIGTABLESIZE<<10) // for calculating delta without floatingpoint
#define SIGTABMAX 1023 // equals VREF 3.3 V
// states
#define STOPPED 0
#define RUNNING 1

// functions
void checkButtons(void);
void updateLCD(void);


const int sintab[SIGTABLESIZE] = {
         0,    20,    40,    60,    80,   100,   120,   140,   160,   180,
       200,   219,   239,   258,   278,   297,   316,   335,   354,   373,
       391,   410,   428,   446,   464,   482,   500,   517,   535,   552,
       568,   585,   601,   617,   633,   649,   664,   680,   694,   709,
       723,   737,   751,   765,   778,   791,   803,   816,   828,   839,
       851,   862,   872,   883,   893,   902,   911,   920,   929,   937,
       945,   953,   960,   967,   973,   979,   985,   990,   995,   999,
      1003,  1007,  1010,  1013,  1016,  1018,  1020,  1021,  1022,  1023,
      1023,  1023,  1022,  1021,  1020,  1018,  1016,  1013,  1010,  1007,
      1003,   999,   995,   990,   985,   979,   973,   967,   960,   953,
       945,   937,   929,   920,   911,   902,   893,   883,   872,   862,
       851,   839,   828,   816,   803,   791,   778,   765,   751,   737,
       723,   709,   694,   680,   664,   649,   633,   617,   601,   585,
       568,   552,   535,   517,   500,   482,   464,   446,   428,   410,
       391,   373,   354,   335,   316,   297,   278,   258,   239,   219,
       200,   180,   160,   140,   120,   100,    80,    60,    40,    20,
         0,   -20,   -40,   -60,   -80,  -100,  -120,  -140,  -160,  -180,
      -200,  -219,  -239,  -258,  -278,  -297,  -316,  -335,  -354,  -373,
      -391,  -410,  -428,  -446,  -464,  -482,  -500,  -517,  -535,  -552,
      -568,  -585,  -601,  -617,  -633,  -649,  -664,  -680,  -694,  -709,
      -723,  -737,  -751,  -765,  -778,  -791,  -803,  -816,  -828,  -839,
      -851,  -862,  -872,  -883,  -893,  -902,  -911,  -920,  -929,  -937,
      -945,  -953,  -960,  -967,  -973,  -979,  -985,  -990,  -995,  -999,
     -1003, -1007, -1010, -1013, -1016, -1018, -1020, -1021, -1022, -1023,
     -1023, -1023, -1022, -1021, -1020, -1018, -1016, -1013, -1010, -1007,
     -1003,  -999,  -995,  -990,  -985,  -979,  -973,  -967,  -960,  -953,
      -945,  -937,  -929,  -920,  -911,  -902,  -893,  -883,  -872,  -862,
      -851,  -839,  -828,  -816,  -803,  -791,  -778,  -765,  -751,  -737,
      -723,  -709,  -694,  -680,  -664,  -649,  -633,  -617,  -601,  -585,
      -568,  -552,  -535,  -517,  -500,  -482,  -464,  -446,  -428,  -410,
      -391,  -373,  -354,  -335,  -316,  -297,  -278,  -258,  -239,  -219,
      -200,  -180,  -160,  -140,  -120,  -100,   -80,   -60,   -40,   -20,
         0
    };
	
	
const int tritab[SIGTABLESIZE] = {
         0,    13,    26,    38,    51,    64,    77,    90,   102,   115,
       128,   141,   153,   166,   179,   192,   205,   217,   230,   243,
       256,   269,   281,   294,   307,   320,   332,   345,   358,   371,
       384,   396,   409,   422,   435,   448,   460,   473,   486,   499,
       512,   524,   537,   550,   563,   575,   588,   601,   614,   627,
       639,   652,   665,   678,   691,   703,   716,   729,   742,   754,
       767,   780,   793,   806,   818,   831,   844,   857,   870,   882,
       895,   908,   921,   933,   946,   959,   972,   985,   997,  1010,
      1023,  1010,   997,   985,   972,   959,   946,   933,   921,   908,
       895,   882,   870,   857,   844,   831,   818,   806,   793,   780,
       767,   754,   742,   729,   716,   703,   691,   678,   665,   652,
       639,   627,   614,   601,   588,   575,   563,   550,   537,   524,
       512,   499,   486,   473,   460,   448,   435,   422,   409,   396,
       384,   371,   358,   345,   332,   320,   307,   294,   281,   269,
       256,   243,   230,   217,   205,   192,   179,   166,   153,   141,
       128,   115,   102,    90,    77,    64,    51,    38,    26,    13,
         0,   -13,   -26,   -38,   -51,   -64,   -77,   -90,  -102,  -115,
      -128,  -141,  -153,  -166,  -179,  -192,  -205,  -217,  -230,  -243,
      -256,  -269,  -281,  -294,  -307,  -320,  -332,  -345,  -358,  -371,
      -384,  -396,  -409,  -422,  -435,  -448,  -460,  -473,  -486,  -499,
      -511,  -524,  -537,  -550,  -563,  -575,  -588,  -601,  -614,  -627,
      -639,  -652,  -665,  -678,  -691,  -703,  -716,  -729,  -742,  -754,
      -767,  -780,  -793,  -806,  -818,  -831,  -844,  -857,  -870,  -882,
      -895,  -908,  -921,  -933,  -946,  -959,  -972,  -985,  -997, -1010,
     -1023, -1010,  -997,  -985,  -972,  -959,  -946,  -933,  -921,  -908,
      -895,  -882,  -870,  -857,  -844,  -831,  -818,  -806,  -793,  -780,
      -767,  -754,  -742,  -729,  -716,  -703,  -691,  -678,  -665,  -652,
      -639,  -627,  -614,  -601,  -588,  -575,  -563,  -550,  -537,  -524,
      -511,  -499,  -486,  -473,  -460,  -448,  -435,  -422,  -409,  -396,
      -384,  -371,  -358,  -345,  -332,  -320,  -307,  -294,  -281,  -269,
      -256,  -243,  -230,  -217,  -205,  -192,  -179,  -166,  -153,  -141,
      -128,  -115,  -102,   -90,   -77,   -64,   -51,   -38,   -26,   -13,
         0
    };

